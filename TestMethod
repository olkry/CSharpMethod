//Метод определяющий четверть по координатам точки.
//Method for determining a quarter by point coordinates.
void PrintQuterTest(int x, int y)
{
      if (x > 0 && y > 0) Console.WriteLine("Точка в 1 четверти");
      if (x > 0 && y < 0) Console.WriteLine("Точка в 2 четверти");
      if (x < 0 && y < 0) Console.WriteLine("Точка в 3 четверти");
      if (x < 0 && y > 0) Console.WriteLine("Точка в 4 четверти");
}

//Метод показывает диапазон возможных координат точек в заданой четверти.
//The method shows the range of possible coordinates of points in a given quadrant.
void PrintAnswer(int num)
{
      if(num>0 && num<5)
      {
            if(num == 1) Console.WriteLine("x > 0, y > 0");
            if(num == 2) Console.WriteLine("x > 0, y < 0");
            if(num == 3) Console.WriteLine("x < 0, y < 0");
            if(num == 4) Console.WriteLine("x < 0, y > 0");
      }
      else Console.WriteLine("Неверная четверть");
}


//Метод теста 5 значного палиндрома.
//Test method for 5 digit palindrome.
bool PalinTest(int num)
{
    bool res = false;
    if ((num / 10000 == num % 10) && ((num / 1000) % 10 == (num / 10) % 10))
    {
        res = true;
    }

    return res;
}

//Таблица умножения через цикл for
//Multiplication table through a for loop
for (int i = 2; i <= 10; i++)
{
      for (int j = 2; j <= 10; j++)
      {
            Console.WriteLine($"{i} x {j} = {i * j}");
      }
      Console.WriteLine("-------------");
}


// Замена символов в тексте.
//Replacing characters in text.
string Replace(string text, char oldValue, char newValue)
{
      string result = String.Empty;

      int length = text.Length;
      for (int i = 0; i < length; i++)
      {
            if (text[i] == oldValue) result = result + $"{newValue}";
            else result = result + $"{text[i]}";
      }

      return result;
}


//Метод находит расстояние между точками на плоскости.
//the method finds the distance between points on the plane.
double CalcLen2D(int x1, int x2, int y1, int y2)
{
      return Math.Sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
}

double CalcLen3D(int x1, int x2, int y1, int y2, int z1, int z2)
{
    return Math.Sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) + (z1 - z2) * (z1 - z2));
}


// Метод взведения в степень ряда чисел.
// The method of raising a series of numbers to a power.
string LineBuilder(int num, int pow)
{
      string res = String.Empty;
      for (int i = 1; i <= num; i++)
      {
            res = res + Math.Pow(i, pow) + "\t";
      }
      return res;
}


//Метод проверки, является ли одно число квадратом другого.
//A method for checking if one number is the square of another.
void SqeaTest(int num1, int num2)
{
      if (num1 == num2 * num2)
      {
            Console.WriteLine($"Число {num1} квадрат числа {num2}");

      }
      else
      {
            Console.WriteLine($"Число {num1} не квадрат числа {num2}");
      }
}

